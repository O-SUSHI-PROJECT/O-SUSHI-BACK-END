name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    name: âœ… Testes UnitÃ¡rios com Cobertura
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Instalar dependÃªncias
        run: npm ci # ou yarn install, dependendo do projeto

      - name: Rodar testes com cobertura
        run: |
          npm run test:coverage # ajuste conforme seu script
        # Gera cobertura no diretÃ³rio `coverage`

      - name: Upload do relatÃ³rio de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: cobertura
          path: coverage/ # ajuste para o caminho real da cobertura

  sonarqube:
    name: ðŸ“Š SonarQube - AnÃ¡lise de CÃ³digo
    runs-on: ubuntu-latest
    needs: tests # garante que os testes rodem antes

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Baixar cobertura de testes
        uses: actions/download-artifact@v4
        with:
          name: cobertura
          path: coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=SEU_PROJECT_KEY
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
